{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ben/research/2020/11_november/potter_graph/app/src/Config.js\";\nimport React from 'react';\nimport { Button, ButtonGroup } from 'react-bootstrap';\n\nfunction buildconfig() {\n  var NodeTypes = {};\n  config.NodeTypes.map(type => {\n    type.shape = /*#__PURE__*/_jsxDEV(\"symbol\", {\n      viewBox: \"0 0 100 100\",\n      id: type.typeText,\n      children: /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"50\",\n        cy: \"50\",\n        r: \"45\",\n        style: {\n          color: '#ffffff',\n          fill: type.color\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }, this)\n    }, \"0\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }, this);\n    NodeTypes[type.typeText] = type;\n  });\n  var EdgeTypes = {};\n  config.EdgeTypes.map(type => {\n    type.shape = /*#__PURE__*/_jsxDEV(\"symbol\", {\n      viewBox: \"0 0 200 200\",\n      id: type.typeText,\n      label_from: type.typeText,\n      children: /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"100\",\n        cy: \"100\",\n        r: \"45\",\n        fill: type.color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this)\n    }, \"0\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this);\n    EdgeTypes[type.typeText] = type;\n    console.log(type);\n  });\n  var PotterConfig = {\n    NodeTypes: NodeTypes,\n    NodeSubtypes: {},\n    EdgeTypes: EdgeTypes\n  };\n  return PotterConfig;\n}\n\nfunction builddata() {\n  return JSON.parse(require('./data.json'));\n}\n\nclass DataBuilder extends React.Component {\n  constructor(props) {\n    this.state = {\n      config: buildconfig(),\n      data: builddata()\n    };\n    this.buttonClick = this.buttonClick.bind(this);\n  }\n\n  buttonClick() {\n    this.setState({\n      config: buildconfig(),\n      data: builddata()\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => this.buttonClick,\n      children: \" Get Data \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DataBuilder;","map":{"version":3,"sources":["/home/ben/research/2020/11_november/potter_graph/app/src/Config.js"],"names":["React","Button","ButtonGroup","buildconfig","NodeTypes","config","map","type","shape","typeText","color","fill","EdgeTypes","console","log","PotterConfig","NodeSubtypes","builddata","JSON","parse","require","DataBuilder","Component","constructor","props","state","data","buttonClick","bind","setState","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,iBAApC;;AAKA,SAASC,WAAT,GAAuB;AAEnB,MAAIC,SAAS,GAAG,EAAhB;AAEAC,EAAAA,MAAM,CAACD,SAAP,CAAiBE,GAAjB,CAAsBC,IAAI,IAAI;AAC1BA,IAAAA,IAAI,CAACC,KAAL,gBACQ;AAAQ,MAAA,OAAO,EAAC,aAAhB;AAA8B,MAAA,EAAE,EAAED,IAAI,CAACE,QAAvC;AAAA,6BACI;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAgB,QAAA,EAAE,EAAC,IAAnB;AAAwB,QAAA,CAAC,EAAC,IAA1B;AAA+B,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAG,SAAV;AACEC,UAAAA,IAAI,EAAGJ,IAAI,CAACG;AADd;AAAtC;AAAA;AAAA;AAAA;AAAA;AADJ,OAAqD,GAArD;AAAA;AAAA;AAAA;AAAA,YADR;AAMAN,IAAAA,SAAS,CAACG,IAAI,CAACE,QAAN,CAAT,GAA2BF,IAA3B;AAEH,GATD;AAWA,MAAIK,SAAS,GAAG,EAAhB;AAEAP,EAAAA,MAAM,CAACO,SAAP,CAAiBN,GAAjB,CAAsBC,IAAI,IAAI;AAC1BA,IAAAA,IAAI,CAACC,KAAL,gBACQ;AAAQ,MAAA,OAAO,EAAC,aAAhB;AAA8B,MAAA,EAAE,EAAED,IAAI,CAACE,QAAvC;AAAyD,MAAA,UAAU,EAAIF,IAAI,CAACE,QAA5E;AAAA,6BACI;AAAQ,QAAA,EAAE,EAAC,KAAX;AAAiB,QAAA,EAAE,EAAC,KAApB;AAA0B,QAAA,CAAC,EAAC,IAA5B;AAAiC,QAAA,IAAI,EAAEF,IAAI,CAACG;AAA5C;AAAA;AAAA;AAAA;AAAA;AADJ,OAAqD,GAArD;AAAA;AAAA;AAAA;AAAA,YADR;AAKAE,IAAAA,SAAS,CAACL,IAAI,CAACE,QAAN,CAAT,GAA2BF,IAA3B;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACH,GARD;AAUA,MAAIQ,YAAY,GAAI;AAChBX,IAAAA,SAAS,EAAEA,SADK;AAEhBY,IAAAA,YAAY,EAAE,EAFE;AAGhBJ,IAAAA,SAAS,EAAEA;AAHK,GAApB;AAMA,SAAOG,YAAP;AACH;;AAED,SAASE,SAAT,GAAqB;AACjB,SAAOC,IAAI,CAACC,KAAL,CAAWC,OAAO,CAAC,aAAD,CAAlB,CAAP;AACH;;AAED,MAAMC,WAAN,SAA0BrB,KAAK,CAACsB,SAAhC,CAA0C;AAEtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,SAAKC,KAAL,GAAa;AACTpB,MAAAA,MAAM,EAAGF,WAAW,EADX;AAETuB,MAAAA,IAAI,EAAGT,SAAS;AAFP,KAAb;AAKA,SAAKU,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDD,EAAAA,WAAW,GAAG;AACV,SAAKE,QAAL,CAAc;AACVxB,MAAAA,MAAM,EAAGF,WAAW,EADV;AAEVuB,MAAAA,IAAI,EAAGT,SAAS;AAFN,KAAd;AAIH;;AAEDa,EAAAA,MAAM,GAAE;AACJ,wBACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAI,MAAM,KAAKH,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAEE;;AArBgC;;AAyB1C,eAAeN,WAAf","sourcesContent":["import React from 'react';\nimport { Button, ButtonGroup } from 'react-bootstrap';\n\n\n\n\nfunction buildconfig() {\n    \n    var NodeTypes = {}\n\n    config.NodeTypes.map( type => {\n        type.shape =  (\n                <symbol viewBox=\"0 0 100 100\" id={type.typeText} key=\"0\">\n                    <circle cx=\"50\" cy=\"50\" r=\"45\" style={{ color : '#ffffff' , \n                                                            fill : type.color}} ></circle>\n                </symbol>\n                )\n        NodeTypes[type.typeText] = type\n        \n    })\n    \n    var EdgeTypes = {}\n    \n    config.EdgeTypes.map( type => {\n        type.shape = (\n                <symbol viewBox=\"0 0 200 200\" id={type.typeText} key=\"0\" label_from = {type.typeText}>\n                    <circle cx=\"100\" cy=\"100\" r=\"45\" fill={type.color}></circle>\n                </symbol>\n        )\n        EdgeTypes[type.typeText] = type\n        console.log(type)\n    })\n    \n    var PotterConfig =  {\n        NodeTypes: NodeTypes,\n        NodeSubtypes: {},\n        EdgeTypes: EdgeTypes\n      }\n      \n    return PotterConfig;\n}\n\nfunction builddata() {\n    return JSON.parse(require('./data.json'))\n}\n\nclass DataBuilder extends React.Component {\n\n    constructor(props) {\n        this.state = {\n            config : buildconfig(),\n            data : builddata()\n        };\n\n        this.buttonClick = this.buttonClick.bind(this)\n    }\n\n    buttonClick() {\n        this.setState({\n            config : buildconfig(),\n            data : builddata()\n        });\n    }\n\n    render(){\n        return (\n            <Button onClick = {() => this.buttonClick }> Get Data </Button>\n        )}\n}\n\n\nexport default DataBuilder;\n"]},"metadata":{},"sourceType":"module"}