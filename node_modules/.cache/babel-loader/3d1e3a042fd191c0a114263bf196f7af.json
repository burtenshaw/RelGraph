{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ben/research/2020/11_november/potter_graph/app/src/Config.js\";\nimport React from 'react';\nimport { Button, ButtonGroup, Container, Dropdown, InputGroup, FormControl, Form, ListGroup, ListGroupItem, OverlayTrigger, Popover, Tab, Tabs, Row, Nav } from 'react-bootstrap';\nimport Highlighter from \"react-highlight-words\";\n\nclass RelationView extends React.Component {\n  constructor(props) {\n    super(props);\n  } // onSelectPanNode = (event) => {\n  //     if (this.GraphView) {\n  //       this.ref.GraphView.panToNode(event.target.value, true);\n  //     }\n  //   };\n\n\n  render() {\n    var relation = this.props.relations;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        defaultActiveKey: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"info\",\n          title: \"Relation Info\",\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            children: [/*#__PURE__*/_jsxDEV(ListGroupItem, {\n              children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-secondary\",\n                  children: \"source\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-secondary\",\n                  children: relation.top_sentence\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 30,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-secondary\",\n                  children: \"target\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n              children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-secondary\",\n                  children: \"size\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-secondary\",\n                  children: relation.size\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n              children: relation.key_words.map(kw => {\n                return /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-secondary\",\n                  style: {\n                    margin: '2px'\n                  },\n                  children: kw\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 49\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"profile\",\n          title: \"Examples\",\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            children: relation.relations.map(r => {\n              return /*#__PURE__*/_jsxDEV(ListGroupItem, {\n                children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                  className: \"d-flex\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-secondary\",\n                    children: r.s\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n                    trigger: \"click\",\n                    placement: \"top\",\n                    overlay: /*#__PURE__*/_jsxDEV(Popover, {\n                      id: `popover-positioned-top`,\n                      children: [/*#__PURE__*/_jsxDEV(Popover.Title, {\n                        as: \"h3\",\n                        children: [\"Book: \", r.bi.book, \" Chapter : \", r.bi.chapter, \" \", r.bi.page]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 66,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Popover.Content, {\n                        children: /*#__PURE__*/_jsxDEV(Highlighter, {\n                          highlightClassName: \"highlighted\",\n                          searchWords: [r.rc],\n                          autoEscape: true,\n                          textToHighlight: r.p\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 68,\n                          columnNumber: 49\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 67,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 65,\n                      columnNumber: 49\n                    }, this),\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      block: true,\n                      variant: \"outline-secondary\",\n                      children: [r.rc.slice(0, 20), \"...\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 45\n                    }, this)\n                  }, 'paragraph', false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-secondary\",\n                    children: r.t\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 33\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nclass AgeView extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    var age = this.props.age;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        defaultActiveKey: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"info\",\n          title: \"Relation Info\",\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            children: [/*#__PURE__*/_jsxDEV(ListGroupItem, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n              children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-secondary\",\n                  children: \"Frequency\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-secondary\",\n                  children: age.frequency\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-secondary\",\n                  children: \"n Charcters\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-secondary\",\n                  children: age.n_characters\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n              children: age.characters.map(c => {\n                return /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-secondary\",\n                  style: {\n                    margin: '2px'\n                  },\n                  children: c\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 49\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"profile\",\n          title: \"Examples\",\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            children: age.relations.map(r => {\n              return /*#__PURE__*/_jsxDEV(ListGroupItem, {\n                children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                  className: \"d-flex\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-secondary\",\n                    children: r.s\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n                    trigger: \"click\",\n                    placement: \"top\",\n                    overlay: /*#__PURE__*/_jsxDEV(Popover, {\n                      id: `popover-positioned-top`,\n                      children: [/*#__PURE__*/_jsxDEV(Popover.Title, {\n                        as: \"h3\",\n                        children: \"book placement\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 157,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Popover.Content, {\n                        children: /*#__PURE__*/_jsxDEV(Highlighter, {\n                          highlightClassName: \"highlighted\",\n                          searchWords: [r.rc],\n                          autoEscape: true,\n                          textToHighlight: r.rc\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 159,\n                          columnNumber: 49\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 158,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 49\n                    }, this),\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      block: true,\n                      variant: \"outline-secondary\",\n                      children: [r.rc.slice(0, 20), \"...\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 169,\n                      columnNumber: 45\n                    }, this)\n                  }, 'paragraph', false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-secondary\",\n                    children: r.t\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 33\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass DataBuilder extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.buttonClick = event => {\n      if (this.state.newQuery) {// this.props.parentCallback({data: null,\n        //     config: null});\n        // this.setState({ newQuery : false });\n        // this.getRelation();\n      } // this.props.parentCallback({data: this.state.data,\n      //                             config: this.state.config});\n      // event.preventDefault();\n\n    };\n\n    this.handleClusterQuery = event => {\n      this.state.query.push(event);\n      this.setState({\n        newQuery: true\n      });\n      this.props.parentCallback({\n        query: this.state.query\n      }); // event.preventDefault();\n    };\n\n    this.onSelectRelation = e => {\n      this.setState({\n        relationid: parseInt(e.cluster)\n      });\n    };\n\n    this.handleAgeQuery = event => {// this.state.query.push(event);\n      // this.setState({ newQuery : true});\n      // this.props.parentCallback({query: this.state.query});\n      // event.preventDefault();\n    };\n\n    this.onSelectAge = e => {\n      this.setState({\n        age: e\n      });\n    };\n\n    var config = JSON.parse(require('./config.json'));\n    var data = JSON.parse(require('./data.json'));\n    var relationslist = JSON.parse(require('./relations.json'));\n    var ages = JSON.parse(require('./ages.json'));\n    this.state = {\n      config: this.buildconfig(config),\n      data: this.builddata(data),\n      query: [],\n      newQuery: null,\n      newData: true,\n      relations: config.EdgeTypes,\n      relationview: null,\n      relationid: null,\n      relationslist: relationslist,\n      agesResource: ages\n    };\n    this.buttonClick = this.buttonClick.bind(this);\n    this.handleClusterQuery = this.handleClusterQuery.bind(this);\n    this.getRelation = this.getRelation.bind(this);\n    this.onSelectRelation = this.onSelectRelation.bind(this); // this.doData = this.doData.bind(this);\n    // this.componentDidUpdate = this.componentDidUpdate.bind(this);\n    // this.componentDidMount = this.componentDidUpdate.bind(this);\n  }\n\n  buildconfig(config) {\n    var NodeTypes = {};\n    config.NodeTypes.map(type => {\n      type.shape = /*#__PURE__*/_jsxDEV(\"symbol\", {\n        viewBox: \"0 0 100 100\",\n        id: type.typeText,\n        children: /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"50\",\n          cy: \"50\",\n          r: \"45\",\n          style: {\n            color: '#ffffff',\n            fill: type.color\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 25\n        }, this)\n      }, \"0\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }, this);\n      NodeTypes[type.typeText] = type;\n    });\n    var EdgeTypes = {};\n    config.EdgeTypes.map(type => {\n      type.shape = /*#__PURE__*/_jsxDEV(\"symbol\", {\n        viewBox: \"0 0 200 200\",\n        id: type.typeText,\n        label_from: type.typeText,\n        children: /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"100\",\n          cy: \"100\",\n          r: \"45\",\n          fill: type.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }, this)\n      }, \"0\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }, this);\n      EdgeTypes[type.typeText] = type;\n    });\n    var PotterConfig = {\n      NodeTypes: NodeTypes,\n      NodeSubtypes: {},\n      EdgeTypes: EdgeTypes\n    };\n    return PotterConfig;\n  }\n\n  builddata(data) {\n    return data;\n  }\n\n  async getRelation() {\n    const response = await fetch('http://localhost:5000/cluster', {\n      method: 'POST',\n      // or 'PUT'\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(this.state.query)\n    });\n    const data = await response.json();\n    console.log(data);\n    this.setState({\n      data: this.builddata(data.data),\n      config: this.buildconfig(data.config)\n    });\n  }\n\n  // componentDidMount () {\n  //     this.props.parentCallback({data: this.state.data,\n  //         config: this.state.config});\n  // }\n  render() {\n    var relationview = this.state.relationid ? /*#__PURE__*/_jsxDEV(RelationView, {\n      ref: this.props.ref,\n      relations: this.state.relationslist[this.state.relationid]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 54\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 158\n    }, this);\n    var ageview = this.state.age ? /*#__PURE__*/_jsxDEV(AgeView, {\n      age: this.state.age\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 42\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 79\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Tab.Container, {\n        id: \"left-tabs-example\",\n        defaultActiveKey: \"first\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Nav, {\n            variant: \"tabs\",\n            className: \"flex-row\",\n            children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n              children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                eventKey: \"first\",\n                children: \"Relations\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n              children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                eventKey: \"second\",\n                children: \"Ages\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Tab.Content, {\n            children: [/*#__PURE__*/_jsxDEV(Tab.Pane, {\n              eventKey: \"first\",\n              children: [this.state.relations.map(relation => {\n                return /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-secondary\",\n                  style: {\n                    backgroundColor: relation.color,\n                    width: '100px',\n                    color: \"white\",\n                    margin: '3px'\n                  },\n                  onClick: event => this.onSelectRelation(relation),\n                  children: relation.typeText\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 45\n                }, this);\n              }), relationview]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Tab.Pane, {\n              eventKey: \"second\",\n              children: [this.state.agesResource.map(age => {\n                return /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-secondary\",\n                  style: {\n                    margin: '3px'\n                  },\n                  onClick: event => this.onSelectAge(age),\n                  children: age.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 41\n                }, this);\n              }), ageview]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DataBuilder;","map":{"version":3,"sources":["/home/ben/research/2020/11_november/potter_graph/app/src/Config.js"],"names":["React","Button","ButtonGroup","Container","Dropdown","InputGroup","FormControl","Form","ListGroup","ListGroupItem","OverlayTrigger","Popover","Tab","Tabs","Row","Nav","Highlighter","RelationView","Component","constructor","props","render","relation","relations","top_sentence","size","key_words","map","kw","margin","r","s","bi","book","chapter","page","rc","p","slice","t","AgeView","age","frequency","n_characters","characters","c","DataBuilder","buttonClick","event","state","newQuery","handleClusterQuery","query","push","setState","parentCallback","onSelectRelation","e","relationid","parseInt","cluster","handleAgeQuery","onSelectAge","config","JSON","parse","require","data","relationslist","ages","buildconfig","builddata","newData","EdgeTypes","relationview","agesResource","bind","getRelation","NodeTypes","type","shape","typeText","color","fill","PotterConfig","NodeSubtypes","response","fetch","method","headers","body","stringify","json","console","log","ref","ageview","backgroundColor","width","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, ButtonGroup, Container, Dropdown, InputGroup, FormControl, Form, ListGroup, ListGroupItem, OverlayTrigger, Popover, Tab, Tabs, Row, Nav } from 'react-bootstrap';\nimport Highlighter from \"react-highlight-words\";\n\nclass RelationView extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    // onSelectPanNode = (event) => {\n    //     if (this.GraphView) {\n    //       this.ref.GraphView.panToNode(event.target.value, true);\n    //     }\n    //   };\n\n    render () {\n\n        var relation = this.props.relations;\n\n        return (\n                <Container>\n                                    <Tabs defaultActiveKey=\"info\" >\n                <Tab eventKey=\"info\" title=\"Relation Info\">\n\n                    <ListGroup>\n                        <ListGroupItem>\n                            <ButtonGroup>\n                                <Button variant = 'outline-secondary' >source</Button>\n                                <Button variant = 'outline-secondary' >{relation.top_sentence}</Button>\n                                <Button variant = 'outline-secondary' >target</Button>\n                            </ButtonGroup>\n                        </ListGroupItem>\n                        <ListGroupItem>\n                        <ButtonGroup>\n                                <Button variant = 'outline-secondary' >size</Button>\n                                <Button variant = 'outline-secondary' >{relation.size}</Button>\n                            </ButtonGroup>\n                        </ListGroupItem>\n                        <ListGroupItem>\n\n                            {relation.key_words.map(kw => {\n                                        return (<Button variant = 'outline-secondary' style={{margin : '2px'}}>{kw}</Button>)\n                            }\n                                \n                                )}\n                        </ListGroupItem>\n                    </ListGroup>\n\n                </Tab>\n                <Tab eventKey=\"profile\" title=\"Examples\">\n                    <ListGroup>\n                        {relation.relations.map( r => {\n                            return (\n                                <ListGroupItem>\n                                    <ButtonGroup className=\"d-flex\">\n                                        <Button variant = 'outline-secondary'>{r.s}</Button>\n\n\n                                        <OverlayTrigger\n                                            trigger=\"click\"\n                                            key='paragraph'\n                                            placement='top'\n                                            overlay={\n                                                <Popover id={`popover-positioned-top`}>\n                                                <Popover.Title as=\"h3\">Book: {r.bi.book} Chapter : {r.bi.chapter} {r.bi.page}</Popover.Title>\n                                                <Popover.Content>\n                                                <Highlighter\n                                                        highlightClassName=\"highlighted\"\n                                                        searchWords={[r.rc]}\n                                                        autoEscape={true}\n                                                        textToHighlight={r.p}\n                                                    />\n                                                </Popover.Content>\n                                                </Popover>\n                                            }\n                                            >\n                                            <Button block variant = 'outline-secondary'>{r.rc.slice(0,20)}...</Button>\n                                            </OverlayTrigger>\n                                            \n                                            <Button variant = 'outline-secondary'>{r.t}</Button>\n                                        {/* add overlay */}\n                                    </ButtonGroup>\n                                </ListGroupItem>\n                            )\n                    })}     \n                    </ListGroup>            \n                </Tab>\n\n                </Tabs>\n                </Container>\n\n            \n        )\n    }\n\n\n}\n\nclass AgeView extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render () {\n\n        var age = this.props.age;\n\n        return (\n\n            <Container>\n                                <Tabs defaultActiveKey=\"info\" >\n                <Tab eventKey=\"info\" title=\"Relation Info\">\n\n                    <ListGroup>\n                        <ListGroupItem>\n\n\n                        </ListGroupItem>\n                        <ListGroupItem>\n                        <ButtonGroup>\n                                <Button variant = 'outline-secondary' >Frequency</Button>\n                                <Button variant = 'outline-secondary' >{age.frequency}</Button>\n                        </ButtonGroup>\n                        <ButtonGroup>\n                                <Button variant = 'outline-secondary' >n Charcters</Button>\n                                <Button variant = 'outline-secondary' >{age.n_characters}</Button>\n                        </ButtonGroup>\n                        </ListGroupItem>\n                        <ListGroupItem>\n\n                            {age.characters.map(c => {\n                                        return (<Button variant = 'outline-secondary' style={{margin : '2px'}}>{c}</Button>)\n                            }\n                                \n                                )}\n                        </ListGroupItem>\n                    </ListGroup>\n\n                </Tab>\n                <Tab eventKey=\"profile\" title=\"Examples\">\n                    <ListGroup>\n                        {age.relations.map( r => {\n                            return (\n                                <ListGroupItem>\n                                    <ButtonGroup className=\"d-flex\">\n                                        <Button variant = 'outline-secondary'>{r.s}</Button>\n\n\n                                        <OverlayTrigger\n                                            trigger=\"click\"\n                                            key='paragraph'\n                                            placement='top'\n                                            overlay={\n                                                <Popover id={`popover-positioned-top`}>\n                                                <Popover.Title as=\"h3\">book placement</Popover.Title>\n                                                <Popover.Content>\n                                                <Highlighter\n                                                        highlightClassName=\"highlighted\"\n                                                        searchWords={[r.rc]}\n                                                        autoEscape={true}\n                                                        textToHighlight={r.rc}\n                                                    />\n                                                </Popover.Content>\n                                                </Popover>\n                                            }\n                                            >\n                                            <Button block variant = 'outline-secondary'>{r.rc.slice(0,20)}...</Button>\n                                            </OverlayTrigger>\n                                            \n                                            <Button variant = 'outline-secondary'>{r.t}</Button>\n                                        {/* add overlay */}\n                                    </ButtonGroup>\n                                </ListGroupItem>\n                            )\n                    })}     \n                    </ListGroup>            \n                </Tab>\n\n                </Tabs>\n                \n            </Container>\n            \n        )\n    }\n\n\n}\n\nclass DataBuilder extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        var config = JSON.parse(require('./config.json'));\n        var data = JSON.parse(require('./data.json'));\n        var relationslist = JSON.parse(require('./relations.json'));\n        var ages = JSON.parse(require('./ages.json'));\n        \n        this.state = {\n            config : this.buildconfig(config),\n            data : this.builddata(data),\n            query : [],\n            newQuery : null,\n            newData : true,\n            relations : config.EdgeTypes,\n            relationview : null,\n            relationid : null,\n            relationslist :relationslist,\n            agesResource : ages\n        };\n\n        this.buttonClick = this.buttonClick.bind(this);\n        this.handleClusterQuery = this.handleClusterQuery.bind(this);\n        this.getRelation = this.getRelation.bind(this);\n        this.onSelectRelation = this.onSelectRelation.bind(this);\n        // this.doData = this.doData.bind(this);\n\n        // this.componentDidUpdate = this.componentDidUpdate.bind(this);\n        // this.componentDidMount = this.componentDidUpdate.bind(this);\n    }\n\n    buildconfig(config) {\n        \n        var NodeTypes = {}\n    \n        config.NodeTypes.map( type => {\n            type.shape =  (\n                    <symbol viewBox=\"0 0 100 100\" id={type.typeText} key=\"0\">\n                        <circle cx=\"50\" cy=\"50\" r=\"45\" style={{ color : '#ffffff' , \n                                                                fill : type.color}} ></circle>\n                    </symbol>\n                    )\n            NodeTypes[type.typeText] = type\n            \n        })\n        \n        var EdgeTypes = {}\n        \n        config.EdgeTypes.map( type => {\n            type.shape = (\n                    <symbol viewBox=\"0 0 200 200\" id={type.typeText} key=\"0\" label_from = {type.typeText}>\n                        <circle cx=\"100\" cy=\"100\" r=\"45\" fill={type.color}></circle>\n                    </symbol>\n            )\n            EdgeTypes[type.typeText] = type\n        })\n        \n        var PotterConfig =  {\n            NodeTypes: NodeTypes,\n            NodeSubtypes: {},\n            EdgeTypes: EdgeTypes\n          }\n          \n        return PotterConfig;\n    }\n\n    builddata(data) { \n        return data\n    }\n\n    async getRelation() {\n\n        const response = await fetch('http://localhost:5000/cluster', {\n        method: 'POST', // or 'PUT'\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(this.state.query)\n        })\n\n        const data = await response.json()\n\n        console.log(data)\n\n        this.setState({\n            data: this.builddata(data.data),\n            config: this.buildconfig(data.config)})\n\n      }\n    \n\n    buttonClick = (event) => {\n\n        if (this.state.newQuery) {\n            // this.props.parentCallback({data: null,\n            //     config: null});\n            // this.setState({ newQuery : false });\n            // this.getRelation();\n        }\n        \n        // this.props.parentCallback({data: this.state.data,\n        //                             config: this.state.config});\n\n        // event.preventDefault();\n    }\n\n\n    handleClusterQuery = (event) => {\n        this.state.query.push(event);\n        this.setState({ newQuery : true});\n        this.props.parentCallback({query: this.state.query});\n        // event.preventDefault();\n    }\n\n\n    onSelectRelation = (e) => {\n        this.setState({relationid : parseInt(e.cluster)})   \n        \n    }\n\n    handleAgeQuery = (event) => {\n        // this.state.query.push(event);\n        // this.setState({ newQuery : true});\n        // this.props.parentCallback({query: this.state.query});\n        // event.preventDefault();\n    }\n\n\n    onSelectAge = (e) => {\n        this.setState({age : e})   \n        \n    }\n\n    // componentDidMount () {\n    //     this.props.parentCallback({data: this.state.data,\n    //         config: this.state.config});\n    // }\n\n    render () {\n\n        var relationview = (this.state.relationid) ? <RelationView ref = {this.props.ref} relations = {this.state.relationslist[this.state.relationid]} /> : <div></div>\n        var ageview = (this.state.age) ? <AgeView age = {this.state.age} /> : <div></div>\n        return (\n\n            <Container>\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\n                    <Row>\n                        <Nav variant=\"tabs\" className=\"flex-row\">\n                            <Nav.Item>\n                            <Nav.Link eventKey=\"first\">Relations</Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item>\n                            <Nav.Link eventKey=\"second\">Ages</Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                    </Row>\n                    <Row>\n                    <Tab.Content>\n                            <Tab.Pane eventKey=\"first\">\n                                {this.state.relations.map(relation => {\n                                    return (\n                                            <Button \n                                                variant = 'outline-secondary' \n                                                style = {{backgroundColor : relation.color, width : '100px', color : \"white\", margin: '3px'}} \n                                                onClick = {(event) => this.onSelectRelation(relation)}>{relation.typeText}\n                                            </Button>\n\n                                            )\n                                })}\n                                {relationview}\n                            </Tab.Pane>\n                            <Tab.Pane eventKey=\"second\">\n                                {this.state.agesResource.map(age => {\n                                    return (\n                                        \n                                        <Button variant = 'outline-secondary' \n                                                style={{margin : '3px'}} \n                                                onClick = {(event) => this.onSelectAge(age)}>{age.id}</Button>\n                                        \n                                            )\n                                })}\n                                {ageview}\n                            </Tab.Pane>\n                        </Tab.Content>\n                    </Row>\n                    </Tab.Container>\n            </Container>\n            \n        )}\n}\n\n\nexport default DataBuilder;"]},"metadata":{},"sourceType":"module"}