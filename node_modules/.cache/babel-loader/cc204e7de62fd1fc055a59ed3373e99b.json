{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ben/research/2020/11_november/potter_graph/app/src/Config.js\";\nimport React from 'react';\nimport { Button, ButtonGroup, Container, Dropdown, InputGroup, FormControl, Form, ListGroup, ListGroupItem, OverlayTrigger, Popover, Tab, Tabs } from 'react-bootstrap';\nimport Highlighter from \"react-highlight-words\";\n\nclass RelationView extends React.Component {\n  constructor(props) {\n    super(props);\n  } // onSelectPanNode = (event) => {\n  //     if (this.GraphView) {\n  //       this.ref.GraphView.panToNode(event.target.value, true);\n  //     }\n  //   };\n\n\n  render() {\n    var relation = this.props.relations;\n    return /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nclass AgeView extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    var age = this.props.age;\n    return /*#__PURE__*/_jsxDEV(Tabs, {\n      defaultActiveKey: \"info\",\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        eventKey: \"info\",\n        title: \"Relation Info\",\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          children: [/*#__PURE__*/_jsxDEV(ListGroupItem, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-secondary\",\n                children: \"Frequency\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-secondary\",\n                children: age.frequency\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-secondary\",\n                children: \"n Charcters\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-secondary\",\n                children: age.n_characters\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: age.charcters.map(c => {\n              return /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-secondary\",\n                style: {\n                  margin: '2px'\n                },\n                children: c\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 49\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        eventKey: \"profile\",\n        title: \"Examples\",\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          children: age.relations.map(r => {\n            return /*#__PURE__*/_jsxDEV(ListGroupItem, {\n              children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                className: \"d-flex\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-secondary\",\n                  children: r.s\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n                  trigger: \"click\",\n                  placement: \"top\",\n                  overlay: /*#__PURE__*/_jsxDEV(Popover, {\n                    id: `popover-positioned-top`,\n                    children: [/*#__PURE__*/_jsxDEV(Popover.Title, {\n                      as: \"h3\",\n                      children: \"book placement\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 89,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Popover.Content, {\n                      children: /*#__PURE__*/_jsxDEV(Highlighter, {\n                        highlightClassName: \"highlighted\",\n                        searchWords: [r.rc],\n                        autoEscape: true,\n                        textToHighlight: r.rc\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 91,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 49\n                  }, this),\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    block: true,\n                    variant: \"outline-secondary\",\n                    children: [r.rc.slice(0, 20), \"...\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 45\n                  }, this)\n                }, 'paragraph', false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-secondary\",\n                  children: r.t\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nclass DataBuilder extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.buttonClick = event => {\n      if (this.state.newQuery) {// this.props.parentCallback({data: null,\n        //     config: null});\n        // this.setState({ newQuery : false });\n        // this.getRelation();\n      } // this.props.parentCallback({data: this.state.data,\n      //                             config: this.state.config});\n      // event.preventDefault();\n\n    };\n\n    this.handleClusterQuery = event => {\n      this.state.query.push(event);\n      this.setState({\n        newQuery: true\n      });\n      this.props.parentCallback({\n        query: this.state.query\n      }); // event.preventDefault();\n    };\n\n    this.onSelectRelation = e => {\n      this.setState({\n        relationid: parseInt(e.cluster)\n      });\n    };\n\n    this.handleAgeQuery = event => {// this.state.query.push(event);\n      // this.setState({ newQuery : true});\n      // this.props.parentCallback({query: this.state.query});\n      // event.preventDefault();\n    };\n\n    this.onSelectAge = e => {\n      this.setState({\n        age: e\n      });\n    };\n\n    var config = JSON.parse(require('./config.json'));\n    var data = JSON.parse(require('./data.json'));\n    var relationslist = JSON.parse(require('./relations.json'));\n    var ages = JSON.parse(require('./ages.json'));\n    this.state = {\n      config: this.buildconfig(config),\n      data: this.builddata(data),\n      query: [],\n      newQuery: null,\n      newData: true,\n      relations: config.EdgeTypes,\n      relationview: null,\n      relationid: null,\n      relationslist: relationslist,\n      agesResource: ages\n    };\n    this.buttonClick = this.buttonClick.bind(this);\n    this.handleClusterQuery = this.handleClusterQuery.bind(this);\n    this.getRelation = this.getRelation.bind(this);\n    this.onSelectRelation = this.onSelectRelation.bind(this); // this.doData = this.doData.bind(this);\n    // this.componentDidUpdate = this.componentDidUpdate.bind(this);\n    // this.componentDidMount = this.componentDidUpdate.bind(this);\n  }\n\n  buildconfig(config) {\n    var NodeTypes = {};\n    config.NodeTypes.map(type => {\n      type.shape = /*#__PURE__*/_jsxDEV(\"symbol\", {\n        viewBox: \"0 0 100 100\",\n        id: type.typeText,\n        children: /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"50\",\n          cy: \"50\",\n          r: \"45\",\n          style: {\n            color: '#ffffff',\n            fill: type.color\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 25\n        }, this)\n      }, \"0\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this);\n      NodeTypes[type.typeText] = type;\n    });\n    var EdgeTypes = {};\n    config.EdgeTypes.map(type => {\n      type.shape = /*#__PURE__*/_jsxDEV(\"symbol\", {\n        viewBox: \"0 0 200 200\",\n        id: type.typeText,\n        label_from: type.typeText,\n        children: /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"100\",\n          cy: \"100\",\n          r: \"45\",\n          fill: type.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this)\n      }, \"0\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this);\n      EdgeTypes[type.typeText] = type;\n    });\n    var PotterConfig = {\n      NodeTypes: NodeTypes,\n      NodeSubtypes: {},\n      EdgeTypes: EdgeTypes\n    };\n    return PotterConfig;\n  }\n\n  builddata(data) {\n    return data;\n  }\n\n  async getRelation() {\n    const response = await fetch('http://localhost:5000/cluster', {\n      method: 'POST',\n      // or 'PUT'\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(this.state.query)\n    });\n    const data = await response.json();\n    console.log(data);\n    this.setState({\n      data: this.builddata(data.data),\n      config: this.buildconfig(data.config)\n    });\n  }\n\n  // componentDidMount () {\n  //     this.props.parentCallback({data: this.state.data,\n  //         config: this.state.config});\n  // }\n  render() {\n    var relationview = this.state.relationid ? /*#__PURE__*/_jsxDEV(RelationView, {\n      ref: this.props.ref,\n      relations: this.state.relationslist[this.state.relationid]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 54\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 158\n    }, this);\n    var ageview = this.state.age ? /*#__PURE__*/_jsxDEV(AgeView, {\n      age: this.state.age\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 42\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 79\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        defaultActiveKey: \"relation\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"relation\",\n          title: \"Relations\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: this.state.relations.map(relation => {\n              return /*#__PURE__*/_jsxDEV(Form.Row, {\n                children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                    children: /*#__PURE__*/_jsxDEV(InputGroup.Checkbox, {\n                      onClick: event => this.handleClusterQuery(relation.typeText)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 282,\n                      columnNumber: 37\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                    children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                      id: \"basic-addon1\",\n                      style: {\n                        backgroundColor: relation.color,\n                        width: '100px',\n                        color: \"white\"\n                      },\n                      onClick: event => this.onSelectRelation(relation),\n                      children: relation.typeText\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 37\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    placeholder: 'rename'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 21\n          }, this), relationview]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"ages\",\n          tab: \"Life stages\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: this.state.agesResource.map(age => {\n              return /*#__PURE__*/_jsxDEV(Form.Row, {\n                children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                    children: /*#__PURE__*/_jsxDEV(InputGroup.Checkbox, {\n                      onClick: event => this.handleAgeQuery(age.id)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 37\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                    children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                      id: \"basic-addon1\" // style = {{backgroundColor : relation.color, width : '100px', color : \"white\"}} \n                      ,\n                      onClick: event => this.onSelectAge(age),\n                      children: age.id\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 322,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    placeholder: 'rename'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 29\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 21\n          }, this), ageview]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DataBuilder;","map":{"version":3,"sources":["/home/ben/research/2020/11_november/potter_graph/app/src/Config.js"],"names":["React","Button","ButtonGroup","Container","Dropdown","InputGroup","FormControl","Form","ListGroup","ListGroupItem","OverlayTrigger","Popover","Tab","Tabs","Highlighter","RelationView","Component","constructor","props","render","relation","relations","AgeView","age","frequency","n_characters","charcters","map","c","margin","r","s","rc","slice","t","DataBuilder","buttonClick","event","state","newQuery","handleClusterQuery","query","push","setState","parentCallback","onSelectRelation","e","relationid","parseInt","cluster","handleAgeQuery","onSelectAge","config","JSON","parse","require","data","relationslist","ages","buildconfig","builddata","newData","EdgeTypes","relationview","agesResource","bind","getRelation","NodeTypes","type","shape","typeText","color","fill","PotterConfig","NodeSubtypes","response","fetch","method","headers","body","stringify","json","console","log","ref","ageview","backgroundColor","width","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, ButtonGroup, Container, Dropdown, InputGroup, FormControl, Form, ListGroup, ListGroupItem, OverlayTrigger, Popover, Tab, Tabs } from 'react-bootstrap';\nimport Highlighter from \"react-highlight-words\";\n\nclass RelationView extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    // onSelectPanNode = (event) => {\n    //     if (this.GraphView) {\n    //       this.ref.GraphView.panToNode(event.target.value, true);\n    //     }\n    //   };\n\n    render () {\n\n        var relation = this.props.relations;\n\n        return (\n                <Container>\n\n                </Container>\n\n            \n        )\n    }\n\n\n}\n\nclass AgeView extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render () {\n\n        var age = this.props.age;\n\n        return (\n\n                <Tabs defaultActiveKey=\"info\" >\n                <Tab eventKey=\"info\" title=\"Relation Info\">\n\n                    <ListGroup>\n                        <ListGroupItem>\n\n\n                        </ListGroupItem>\n                        <ListGroupItem>\n                        <ButtonGroup>\n                                <Button variant = 'outline-secondary' >Frequency</Button>\n                                <Button variant = 'outline-secondary' >{age.frequency}</Button>\n                        </ButtonGroup>\n                        <ButtonGroup>\n                                <Button variant = 'outline-secondary' >n Charcters</Button>\n                                <Button variant = 'outline-secondary' >{age.n_characters}</Button>\n                        </ButtonGroup>\n                        </ListGroupItem>\n                        <ListGroupItem>\n\n                            {age.charcters.map(c => {\n                                        return (<Button variant = 'outline-secondary' style={{margin : '2px'}}>{c}</Button>)\n                            }\n                                \n                                )}\n                        </ListGroupItem>\n                    </ListGroup>\n\n                </Tab>\n                <Tab eventKey=\"profile\" title=\"Examples\">\n                    <ListGroup>\n                        {age.relations.map( r => {\n                            return (\n                                <ListGroupItem>\n                                    <ButtonGroup className=\"d-flex\">\n                                        <Button variant = 'outline-secondary'>{r.s}</Button>\n\n\n                                        <OverlayTrigger\n                                            trigger=\"click\"\n                                            key='paragraph'\n                                            placement='top'\n                                            overlay={\n                                                <Popover id={`popover-positioned-top`}>\n                                                <Popover.Title as=\"h3\">book placement</Popover.Title>\n                                                <Popover.Content>\n                                                <Highlighter\n                                                        highlightClassName=\"highlighted\"\n                                                        searchWords={[r.rc]}\n                                                        autoEscape={true}\n                                                        textToHighlight={r.rc}\n                                                    />\n                                                </Popover.Content>\n                                                </Popover>\n                                            }\n                                            >\n                                            <Button block variant = 'outline-secondary'>{r.rc.slice(0,20)}...</Button>\n                                            </OverlayTrigger>\n                                            \n                                            <Button variant = 'outline-secondary'>{r.t}</Button>\n                                        {/* add overlay */}\n                                    </ButtonGroup>\n                                </ListGroupItem>\n                            )\n                    })}     \n                    </ListGroup>            \n                </Tab>\n\n                </Tabs>\n            \n        )\n    }\n\n\n}\n\nclass DataBuilder extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        var config = JSON.parse(require('./config.json'));\n        var data = JSON.parse(require('./data.json'));\n        var relationslist = JSON.parse(require('./relations.json'));\n        var ages = JSON.parse(require('./ages.json'));\n        \n        this.state = {\n            config : this.buildconfig(config),\n            data : this.builddata(data),\n            query : [],\n            newQuery : null,\n            newData : true,\n            relations : config.EdgeTypes,\n            relationview : null,\n            relationid : null,\n            relationslist :relationslist,\n            agesResource : ages\n        };\n\n        this.buttonClick = this.buttonClick.bind(this);\n        this.handleClusterQuery = this.handleClusterQuery.bind(this);\n        this.getRelation = this.getRelation.bind(this);\n        this.onSelectRelation = this.onSelectRelation.bind(this);\n        // this.doData = this.doData.bind(this);\n\n        // this.componentDidUpdate = this.componentDidUpdate.bind(this);\n        // this.componentDidMount = this.componentDidUpdate.bind(this);\n    }\n\n    buildconfig(config) {\n        \n        var NodeTypes = {}\n    \n        config.NodeTypes.map( type => {\n            type.shape =  (\n                    <symbol viewBox=\"0 0 100 100\" id={type.typeText} key=\"0\">\n                        <circle cx=\"50\" cy=\"50\" r=\"45\" style={{ color : '#ffffff' , \n                                                                fill : type.color}} ></circle>\n                    </symbol>\n                    )\n            NodeTypes[type.typeText] = type\n            \n        })\n        \n        var EdgeTypes = {}\n        \n        config.EdgeTypes.map( type => {\n            type.shape = (\n                    <symbol viewBox=\"0 0 200 200\" id={type.typeText} key=\"0\" label_from = {type.typeText}>\n                        <circle cx=\"100\" cy=\"100\" r=\"45\" fill={type.color}></circle>\n                    </symbol>\n            )\n            EdgeTypes[type.typeText] = type\n        })\n        \n        var PotterConfig =  {\n            NodeTypes: NodeTypes,\n            NodeSubtypes: {},\n            EdgeTypes: EdgeTypes\n          }\n          \n        return PotterConfig;\n    }\n\n    builddata(data) { \n        return data\n    }\n\n    async getRelation() {\n\n        const response = await fetch('http://localhost:5000/cluster', {\n        method: 'POST', // or 'PUT'\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(this.state.query)\n        })\n\n        const data = await response.json()\n\n        console.log(data)\n\n        this.setState({\n            data: this.builddata(data.data),\n            config: this.buildconfig(data.config)})\n\n      }\n    \n\n    buttonClick = (event) => {\n\n        if (this.state.newQuery) {\n            // this.props.parentCallback({data: null,\n            //     config: null});\n            // this.setState({ newQuery : false });\n            // this.getRelation();\n        }\n        \n        // this.props.parentCallback({data: this.state.data,\n        //                             config: this.state.config});\n\n        // event.preventDefault();\n    }\n\n\n    handleClusterQuery = (event) => {\n        this.state.query.push(event);\n        this.setState({ newQuery : true});\n        this.props.parentCallback({query: this.state.query});\n        // event.preventDefault();\n    }\n\n\n    onSelectRelation = (e) => {\n        this.setState({relationid : parseInt(e.cluster)})   \n        \n    }\n\n    handleAgeQuery = (event) => {\n        // this.state.query.push(event);\n        // this.setState({ newQuery : true});\n        // this.props.parentCallback({query: this.state.query});\n        // event.preventDefault();\n    }\n\n\n    onSelectAge = (e) => {\n        this.setState({age : e})   \n        \n    }\n\n    // componentDidMount () {\n    //     this.props.parentCallback({data: this.state.data,\n    //         config: this.state.config});\n    // }\n\n    render () {\n\n        var relationview = (this.state.relationid) ? <RelationView ref = {this.props.ref} relations = {this.state.relationslist[this.state.relationid]} /> : <div></div>\n        var ageview = (this.state.age) ? <AgeView age = {this.state.age} /> : <div></div>\n        return (\n\n            <Container>\n\n\n            \n                <Tabs defaultActiveKey='relation'>\n                    <Tab eventKey = 'relation' title='Relations'>\n                    {/* <Container style = {{ height : '30em', overflow : 'scroll'}}> */}\n\n                    <Form.Group>\n                    {this.state.relations.map(relation => {\n                        return (\n                            \n                        <Form.Row>\n                            <InputGroup>\n                                <InputGroup.Prepend>\n                                    <InputGroup.Checkbox onClick = {(event) => this.handleClusterQuery(relation.typeText)} />\n                                </InputGroup.Prepend>\n                                \n                                <InputGroup.Prepend>\n                                    <InputGroup.Text id=\"basic-addon1\" \n                                                        style = {{backgroundColor : relation.color, width : '100px', color : \"white\"}} \n                                                        onClick = {(event) => this.onSelectRelation(relation)}>{relation.typeText}</InputGroup.Text>\n                                    </InputGroup.Prepend>\n                                <FormControl placeholder={'rename'}/>\n                            \n                            </InputGroup>\n                        </Form.Row>\n\n                                )\n                    })}\n                    </Form.Group>\n                    {/* </Container> */}\n\n                {/* <Container style = {{ height : '30em', overflow : 'scroll'}}> */}\n                    {relationview}\n                {/* </Container> */}\n                {/* <ButtonGroup>\n                    <Button onClick = {(e) => this.buttonClick(e)}> Get Data </Button>\n                </ButtonGroup> */}\n                    </Tab>\n\n                    <Tab eventKey = 'ages' tab='Life stages'>\n                    {/* <Container style = {{ height : \"30em\", overflow : \"scroll\"}} > */}\n                    <Form.Group >\n                    {this.state.agesResource.map(age => {\n                        return (\n                            \n                            <Form.Row  >\n                            <InputGroup>\n\n                                <InputGroup.Prepend>\n                                    <InputGroup.Checkbox onClick = {(event) => this.handleAgeQuery(age.id)} />\n                                </InputGroup.Prepend>\n                                \n                                <InputGroup.Prepend>\n                                <InputGroup.Text id=\"basic-addon1\" \n                                                    // style = {{backgroundColor : relation.color, width : '100px', color : \"white\"}} \n                                                    onClick = {(event) => this.onSelectAge(age)}>{age.id}</InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <FormControl placeholder={'rename'} />\n                                \n                            </InputGroup>\n\n                            </Form.Row>\n                            \n                                )\n                    })}\n                    </Form.Group>\n                    {/* </Container>\n                    <Container style = {{ height : '30em', overflow : 'scroll'}}> */}\n                    {ageview}\n                {/* </Container>                */}\n                    </Tab>\n                </Tabs>\n                \n            </Container>\n            \n        )}\n}\n\n\nexport default DataBuilder;"]},"metadata":{},"sourceType":"module"}