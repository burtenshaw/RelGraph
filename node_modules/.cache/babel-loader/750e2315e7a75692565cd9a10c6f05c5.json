{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ben/research/2020/11_november/potter_graph/app/src/Config.js\";\nimport React from 'react';\nimport { Button, ButtonGroup } from 'react-bootstrap';\n\nclass DataBuilder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      config: this.buildconfig(),\n      data: this.builddata()\n    };\n    this.buttonClick = this.buttonClick.bind(this);\n  }\n\n  buildconfig() {\n    var config = JSON.parse(require('./config.json'));\n    var NodeTypes = {};\n    config.NodeTypes.map(type => {\n      type.shape = /*#__PURE__*/_jsxDEV(\"symbol\", {\n        viewBox: \"0 0 100 100\",\n        id: type.typeText,\n        children: /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"50\",\n          cy: \"50\",\n          r: \"45\",\n          style: {\n            color: '#ffffff',\n            fill: type.color\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this)\n      }, \"0\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this);\n      NodeTypes[type.typeText] = type;\n    });\n    var EdgeTypes = {};\n    config.EdgeTypes.map(type => {\n      type.shape = /*#__PURE__*/_jsxDEV(\"symbol\", {\n        viewBox: \"0 0 200 200\",\n        id: type.typeText,\n        label_from: type.typeText,\n        children: /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"100\",\n          cy: \"100\",\n          r: \"45\",\n          fill: type.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this)\n      }, \"0\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this);\n      EdgeTypes[type.typeText] = type;\n      console.log(type);\n    });\n    var PotterConfig = {\n      NodeTypes: NodeTypes,\n      NodeSubtypes: {},\n      EdgeTypes: EdgeTypes\n    };\n    return PotterConfig;\n  }\n\n  builddata() {\n    var data = JSON.parse(require('./data.json'));\n    return data;\n  }\n\n  buttonClick() {\n    var packet = {\n      config: this.buildconfig(),\n      data: this.builddata()\n    };\n    this.setState(packet);\n    this.props.parentCallback(\"Data from child\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => this.buttonClick,\n      children: \" Get Data \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DataBuilder;","map":{"version":3,"sources":["/home/ben/research/2020/11_november/potter_graph/app/src/Config.js"],"names":["React","Button","ButtonGroup","DataBuilder","Component","constructor","props","state","config","buildconfig","data","builddata","buttonClick","bind","JSON","parse","require","NodeTypes","map","type","shape","typeText","color","fill","EdgeTypes","console","log","PotterConfig","NodeSubtypes","packet","setState","parentCallback","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, ButtonGroup } from 'react-bootstrap';\n\n\nclass DataBuilder extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            config : this.buildconfig(),\n            data : this.builddata()\n        };\n\n        this.buttonClick = this.buttonClick.bind(this)\n    }\n\n    buildconfig() {\n    \n        var config = JSON.parse(require('./config.json'))\n        \n        var NodeTypes = {}\n    \n        config.NodeTypes.map( type => {\n            type.shape =  (\n                    <symbol viewBox=\"0 0 100 100\" id={type.typeText} key=\"0\">\n                        <circle cx=\"50\" cy=\"50\" r=\"45\" style={{ color : '#ffffff' , \n                                                                fill : type.color}} ></circle>\n                    </symbol>\n                    )\n            NodeTypes[type.typeText] = type\n            \n        })\n        \n        var EdgeTypes = {}\n        \n        config.EdgeTypes.map( type => {\n            type.shape = (\n                    <symbol viewBox=\"0 0 200 200\" id={type.typeText} key=\"0\" label_from = {type.typeText}>\n                        <circle cx=\"100\" cy=\"100\" r=\"45\" fill={type.color}></circle>\n                    </symbol>\n            )\n            EdgeTypes[type.typeText] = type\n            console.log(type)\n        })\n        \n        var PotterConfig =  {\n            NodeTypes: NodeTypes,\n            NodeSubtypes: {},\n            EdgeTypes: EdgeTypes\n          }\n          \n        return PotterConfig;\n    }\n\n    builddata() {\n        var data = JSON.parse(require('./data.json'))   \n        return data\n    }    \n\n    buttonClick() {\n        var packet = {\n            config : this.buildconfig(),\n            data : this.builddata()\n        }\n        \n        this.setState(packet);\n        \n        this.props.parentCallback(\"Data from child\")\n    }\n\n    render(){\n        return (\n            <Button onClick = {() => this.buttonClick }> Get Data </Button>\n        )}\n}\n\n\nexport default DataBuilder;"]},"metadata":{},"sourceType":"module"}