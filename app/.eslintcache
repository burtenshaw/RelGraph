[{"/home/burtenshaw/research/2020/11_november/potter_kg/app/src/App.js":"1","/home/burtenshaw/research/2020/11_november/potter_kg/app/src/reportWebVitals.js":"2","/home/burtenshaw/research/2020/11_november/potter_kg/app/src/index.js":"3","/home/burtenshaw/research/2020/11_november/potter_kg/app/src/Config.js":"4"},{"size":2126,"mtime":1606494485000,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1606464874000,"results":"7","hashOfConfig":"6"},{"size":500,"mtime":1606464874000,"results":"8","hashOfConfig":"6"},{"size":924,"mtime":1606496413000,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"7io6ko",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/home/burtenshaw/research/2020/11_november/potter_kg/app/src/App.js",["20","21","22","23","24","25","26","27","28","29","30"],"// import logo from './logo.svg';\nimport React from 'react';\nimport { InteractiveForceGraph, ForceGraph, ForceGraphNode, ForceGraphLink} from 'react-vis-force';\nimport Container from 'react-bootstrap/Container';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport PotterConfig from './Config';\n\nimport {\n  GraphView, // required\n  Edge, // optional\n  type IEdge, // optional\n  Node, // optional\n  type INode, // optional\n  type LayoutEngineType, // required to change the layoutEngineType, otherwise optional\n  BwdlTransformer, // optional, Example JSON transformer\n  GraphUtils // optional, useful utility functions\n} from 'react-digraph';\n\n\nvar data = JSON.parse(require('./data.json'));\n\nconst NODE_KEY = \"id\"       // Allows D3 to correctly update DOM\n\nclass Graph extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      graph: data,\n      selected: {}\n    }\n  }\n\n  /* Define custom graph editing methods here */\n\n  render() {\n    const nodes = this.state.graph.nodes;\n    const edges = this.state.graph.edges;\n    const selected = this.state.selected;\n\n    const NodeTypes = PotterConfig.NodeTypes;\n    const NodeSubtypes = PotterConfig.NodeSubtypes;\n    const EdgeTypes = PotterConfig.EdgeTypes;\n\n    return (\n      <Container id='graph' style={{height: '1000px'}}>\n\n        <GraphView  ref='GraphView'\n                    nodeKey={NODE_KEY}\n                    nodes={nodes}\n                    edges={edges}\n                    selected={selected}\n                    nodeTypes={NodeTypes}\n                    nodeSubtypes={NodeSubtypes}\n                    edgeTypes={EdgeTypes}\n                    onSelectNode={this.onSelectNode}\n                    onCreateNode={this.onCreateNode}\n                    onUpdateNode={this.onUpdateNode}\n                    onDeleteNode={this.onDeleteNode}\n                    onSelectEdge={this.onSelectEdge}\n                    onCreateEdge={this.onCreateEdge}\n                    onSwapEdge={this.onSwapEdge}\n                    onDeleteEdge={this.onDeleteEdge}/>\n      </Container>\n    );\n  }\n\n}\n\nexport default Graph;\n","/home/burtenshaw/research/2020/11_november/potter_kg/app/src/reportWebVitals.js",[],"/home/burtenshaw/research/2020/11_november/potter_kg/app/src/index.js",[],"/home/burtenshaw/research/2020/11_november/potter_kg/app/src/Config.js",["31","32"],"\nvar config = JSON.parse(require('./config.json'));\n\n// const PotterConfig = config.map();\n\nconsole.log(config)\n\nvar NodeTypes = {}\n\nconfig.NodeTypes.map( type => {\n    type.shape =  (\n            <symbol viewBox=\"0 0 100 100\" id={type.typeText} key=\"0\">\n                <circle cx=\"50\" cy=\"50\" r=\"45\" style={{ color : '#ffffff' , \n                                                        fill : type.color}} ></circle>\n            </symbol>\n            \n            )\n    NodeTypes[type.typeText] = type\n})\n\nvar EdgeTypes = {}\n\nconfig.EdgeTypes.map( type => {\n    type.shape = (\n            <symbol viewBox=\"0 0 50 50\" id={type.typeText} key=\"0\">\n                <circle cx=\"100\" cy=\"100\" r=\"8\" fill={type.color} > </circle>\n            </symbol>\n    )\n    EdgeTypes[type.typeText] = type\n})\n\nconst PotterConfig =  {\n    NodeTypes: NodeTypes,\n    NodeSubtypes: {},\n    EdgeTypes: EdgeTypes\n  }\n\nexport default PotterConfig;\n",{"ruleId":"33","severity":1,"message":"34","line":3,"column":10,"nodeType":"35","messageId":"36","endLine":3,"endColumn":31},{"ruleId":"33","severity":1,"message":"37","line":3,"column":33,"nodeType":"35","messageId":"36","endLine":3,"endColumn":43},{"ruleId":"33","severity":1,"message":"38","line":3,"column":45,"nodeType":"35","messageId":"36","endLine":3,"endColumn":59},{"ruleId":"33","severity":1,"message":"39","line":3,"column":61,"nodeType":"35","messageId":"36","endLine":3,"endColumn":75},{"ruleId":"33","severity":1,"message":"40","line":11,"column":3,"nodeType":"35","messageId":"36","endLine":11,"endColumn":7},{"ruleId":"33","severity":1,"message":"41","line":12,"column":8,"nodeType":"35","messageId":"36","endLine":12,"endColumn":13},{"ruleId":"33","severity":1,"message":"42","line":13,"column":3,"nodeType":"35","messageId":"36","endLine":13,"endColumn":7},{"ruleId":"33","severity":1,"message":"43","line":14,"column":8,"nodeType":"35","messageId":"36","endLine":14,"endColumn":13},{"ruleId":"33","severity":1,"message":"44","line":15,"column":8,"nodeType":"35","messageId":"36","endLine":15,"endColumn":24},{"ruleId":"33","severity":1,"message":"45","line":16,"column":3,"nodeType":"35","messageId":"36","endLine":16,"endColumn":18},{"ruleId":"33","severity":1,"message":"46","line":17,"column":3,"nodeType":"35","messageId":"36","endLine":17,"endColumn":13},{"ruleId":"47","severity":1,"message":"48","line":10,"column":28,"nodeType":"49","messageId":"50","endLine":10,"endColumn":30},{"ruleId":"47","severity":1,"message":"48","line":23,"column":28,"nodeType":"49","messageId":"50","endLine":23,"endColumn":30},"no-unused-vars","'InteractiveForceGraph' is defined but never used.","Identifier","unusedVar","'ForceGraph' is defined but never used.","'ForceGraphNode' is defined but never used.","'ForceGraphLink' is defined but never used.","'Edge' is defined but never used.","'IEdge' is defined but never used.","'Node' is defined but never used.","'INode' is defined but never used.","'LayoutEngineType' is defined but never used.","'BwdlTransformer' is defined but never used.","'GraphUtils' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside"]