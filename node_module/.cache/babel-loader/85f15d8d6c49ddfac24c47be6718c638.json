{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/burtenshaw/research/2020/11_november/potter_kg/app/src/App.js\";\n// import logo from './logo.svg';\nimport React from 'react';\nimport { ForceGraph, ForceGraphNode, ForceGraphLink } from 'react-vis-force';\nimport Container from 'react-bootstrap/Container';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nvar data = JSON.parse(require('./data.json'));\nvar config = JSON.parse(require('./config.json'));\nconsole.log(data);\nconsole.log(config); // const NODE_KEY = \"id\"       // Allows D3 to correctly update DOM\n\nclass Graph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graph: data,\n      selected: {},\n      node_config: config.NodeTypes,\n      edge_config: config.EdgeTypes\n    };\n  }\n\n  render() {\n    const e_conf = this.state.edge_config;\n    const n_conf = this.state.node_config;\n    const nodes = this.state.graph.nodes;\n    const edges = this.state.graph.edges;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(ForceGraph, {\n        simulationOptions: {\n          height: 800,\n          width: 800\n        },\n        children: [nodes.map(n => {\n          return /*#__PURE__*/_jsxDEV(ForceGraphNode, {\n            node: {\n              id: n.id\n            },\n            fill: n.color,\n            className: n_conf[n.id].shapeID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 18\n          }, this);\n        }), edges.map(e => {\n          return /*#__PURE__*/_jsxDEV(ForceGraphLink, {\n            link: {\n              source: e.source,\n              target: e.target\n            },\n            color: e.color,\n            className: e_conf[e.edge]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Graph;","map":{"version":3,"sources":["/home/burtenshaw/research/2020/11_november/potter_kg/app/src/App.js"],"names":["React","ForceGraph","ForceGraphNode","ForceGraphLink","Container","data","JSON","parse","require","config","console","log","Graph","Component","constructor","props","state","graph","selected","node_config","NodeTypes","edge_config","EdgeTypes","render","e_conf","n_conf","nodes","edges","height","width","map","n","id","color","shapeID","e","source","target","edge"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,EAAoBC,cAApB,EAAoCC,cAApC,QAAyD,iBAAzD;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAO,sCAAP;AACA,OAAO,WAAP;AAGA,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,OAAO,CAAC,aAAD,CAAlB,CAAX;AACA,IAAIC,MAAM,GAAGH,IAAI,CAACC,KAAL,CAAWC,OAAO,CAAC,eAAD,CAAlB,CAAb;AAEAE,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACAK,OAAO,CAACC,GAAR,CAAYF,MAAZ,E,CAEA;;AAEA,MAAMG,KAAN,SAAoBZ,KAAK,CAACa,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAEZ,IADI;AAEXa,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,WAAW,EAAEV,MAAM,CAACW,SAHT;AAIXC,MAAAA,WAAW,EAAEZ,MAAM,CAACa;AAJT,KAAb;AAMD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAG,KAAKR,KAAL,CAAWK,WAA1B;AACA,UAAMI,MAAM,GAAG,KAAKT,KAAL,CAAWG,WAA1B;AACA,UAAMO,KAAK,GAAG,KAAKV,KAAL,CAAWC,KAAX,CAAiBS,KAA/B;AACA,UAAMC,KAAK,GAAG,KAAKX,KAAL,CAAWC,KAAX,CAAiBU,KAA/B;AACA,wBACE,QAAC,SAAD;AAAA,6BACA,QAAC,UAAD;AAAY,QAAA,iBAAiB,EAAE;AAAEC,UAAAA,MAAM,EAAE,GAAV;AAAeC,UAAAA,KAAK,EAAE;AAAtB,SAA/B;AAAA,mBACCH,KAAK,CAACI,GAAN,CAAUC,CAAC,IAAI;AACd,8BAAS,QAAC,cAAD;AAAgB,YAAA,IAAI,EAAE;AAAEC,cAAAA,EAAE,EAAED,CAAC,CAACC;AAAR,aAAtB;AAAoC,YAAA,IAAI,EAAED,CAAC,CAACE,KAA5C;AAAmD,YAAA,SAAS,EAAER,MAAM,CAACM,CAAC,CAACC,EAAH,CAAN,CAAaE;AAA3E;AAAA;AAAA;AAAA;AAAA,kBAAT;AACD,SAFA,CADD,EAKGP,KAAK,CAACG,GAAN,CAAUK,CAAC,IAAI;AAChB,8BAAQ,QAAC,cAAD;AAAgB,YAAA,IAAI,EAAE;AAAEC,cAAAA,MAAM,EAAED,CAAC,CAACC,MAAZ;AAAoBC,cAAAA,MAAM,EAAEF,CAAC,CAACE;AAA9B,aAAtB;AAA8D,YAAA,KAAK,EAAEF,CAAC,CAACF,KAAvE;AAA8E,YAAA,SAAS,EAAET,MAAM,CAACW,CAAC,CAACG,IAAH;AAA/F;AAAA;AAAA;AAAA;AAAA,kBAAR;AACD,SAFE,CALH;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AA/BiC;;AAmCpC,eAAe1B,KAAf","sourcesContent":["// import logo from './logo.svg';\nimport React from 'react';\nimport {ForceGraph, ForceGraphNode, ForceGraphLink} from 'react-vis-force';\nimport Container from 'react-bootstrap/Container';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\nvar data = JSON.parse(require('./data.json'));\nvar config = JSON.parse(require('./config.json'));\n\nconsole.log(data)\nconsole.log(config)\n\n// const NODE_KEY = \"id\"       // Allows D3 to correctly update DOM\n\nclass Graph extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      graph: data,\n      selected: {},\n      node_config: config.NodeTypes,\n      edge_config: config.EdgeTypes\n    }\n  }\n\n  render() {\n    const e_conf = this.state.edge_config;\n    const n_conf = this.state.node_config;\n    const nodes = this.state.graph.nodes;\n    const edges = this.state.graph.edges;\n    return (\n      <Container>\n      <ForceGraph simulationOptions={{ height: 800, width: 800 }}>\n      {nodes.map(n => {\n        return ( <ForceGraphNode node={{ id: n.id }} fill={n.color} className={n_conf[n.id].shapeID}/>)\n      })\n    }\n        {edges.map(e => {\n        return (<ForceGraphLink link={{ source: e.source, target: e.target }} color={e.color} className={e_conf[e.edge]}/>) \n      })}\n\n      </ForceGraph>\n      </Container>\n    );\n  }\n\n}\n\nexport default Graph;\n"]},"metadata":{},"sourceType":"module"}