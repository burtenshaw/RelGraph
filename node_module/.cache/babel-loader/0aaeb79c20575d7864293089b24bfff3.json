{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/burtenshaw/research/2020/11_november/potter_kg/app/src/App.js\";\n// import logo from './logo.svg';\nimport React from 'react';\nimport { InteractiveForceGraph, ForceGraph, ForceGraphNode, ForceGraphLink } from 'react-vis-force';\nimport Container from 'react-bootstrap/Container';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nvar data = JSON.parse(require('./data.json')); // const NODE_KEY = \"id\"       // Allows D3 to correctly update DOM\n\nclass Graph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graph: data,\n      selected: {}\n    };\n  }\n\n  render() {\n    const nodes = this.state.graph.nodes;\n    const edges = this.state.graph.edges;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(InteractiveForceGraph, {\n        simulationOptions: {\n          height: 800,\n          width: 800\n        },\n        labelAttr: \"label\" // onSelectNode={(node) => console.log(node)}\n        ,\n        highlightDependencies: true,\n        children: [nodes.map(n => {\n          console.log(n);\n          return /*#__PURE__*/_jsxDEV(ForceGraphNode, {\n            label: n.title,\n            node: {\n              id: n.id\n            },\n            fill: n.color,\n            className: n.class\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 18\n          }, this);\n        }), edges.map(e => {\n          return /*#__PURE__*/_jsxDEV(ForceGraphLink, {\n            link: {\n              source: e.source,\n              target: e.target\n            },\n            stroke: e.color,\n            className: e.class\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Graph;","map":{"version":3,"sources":["/home/burtenshaw/research/2020/11_november/potter_kg/app/src/App.js"],"names":["React","InteractiveForceGraph","ForceGraph","ForceGraphNode","ForceGraphLink","Container","data","JSON","parse","require","Graph","Component","constructor","props","state","graph","selected","render","nodes","edges","height","width","map","n","console","log","title","id","color","class","e","source","target"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,qBAAT,EAAgCC,UAAhC,EAA4CC,cAA5C,EAA4DC,cAA5D,QAAiF,iBAAjF;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAO,sCAAP;AACA,OAAO,WAAP;AAGA,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,OAAO,CAAC,aAAD,CAAlB,CAAX,C,CAGA;;AAEA,MAAMC,KAAN,SAAoBV,KAAK,CAACW,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAET,IADI;AAEXU,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAIDC,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAG,KAAKJ,KAAL,CAAWC,KAAX,CAAiBG,KAA/B;AACA,UAAMC,KAAK,GAAG,KAAKL,KAAL,CAAWC,KAAX,CAAiBI,KAA/B;AACA,wBACE,QAAC,SAAD;AAAA,6BACA,QAAC,qBAAD;AACM,QAAA,iBAAiB,EAAE;AAAEC,UAAAA,MAAM,EAAE,GAAV;AAAeC,UAAAA,KAAK,EAAE;AAAtB,SADzB;AAEM,QAAA,SAAS,EAAC,OAFhB,CAGM;AAHN;AAIM,QAAA,qBAAqB,MAJ3B;AAAA,mBAMCH,KAAK,CAACI,GAAN,CAAUC,CAAC,IAAI;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,8BAAS,QAAC,cAAD;AAAgB,YAAA,KAAK,EAAIA,CAAC,CAACG,KAA3B;AAAkC,YAAA,IAAI,EAAE;AAAEC,cAAAA,EAAE,EAAEJ,CAAC,CAACI;AAAR,aAAxC;AAAsD,YAAA,IAAI,EAAEJ,CAAC,CAACK,KAA9D;AAAqE,YAAA,SAAS,EAAEL,CAAC,CAACM;AAAlF;AAAA;AAAA;AAAA;AAAA,kBAAT;AACD,SAHA,CAND,EAWGV,KAAK,CAACG,GAAN,CAAUQ,CAAC,IAAI;AAChB,8BAAQ,QAAC,cAAD;AAAgB,YAAA,IAAI,EAAE;AAAEC,cAAAA,MAAM,EAAED,CAAC,CAACC,MAAZ;AAAoBC,cAAAA,MAAM,EAAEF,CAAC,CAACE;AAA9B,aAAtB;AAA8D,YAAA,MAAM,EAAEF,CAAC,CAACF,KAAxE;AAA+E,YAAA,SAAS,EAAEE,CAAC,CAACD;AAA5F;AAAA;AAAA;AAAA;AAAA,kBAAR;AACD,SAFE,CAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD;;AAnCiC;;AAuCpC,eAAenB,KAAf","sourcesContent":["// import logo from './logo.svg';\nimport React from 'react';\nimport { InteractiveForceGraph, ForceGraph, ForceGraphNode, ForceGraphLink} from 'react-vis-force';\nimport Container from 'react-bootstrap/Container';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\nvar data = JSON.parse(require('./data.json'));\n\n\n// const NODE_KEY = \"id\"       // Allows D3 to correctly update DOM\n\nclass Graph extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      graph: data,\n      selected: {}\n    }\n  }\n\n\n\n  render() {\n    const nodes = this.state.graph.nodes;\n    const edges = this.state.graph.edges;\n    return (\n      <Container>\n      <InteractiveForceGraph\n            simulationOptions={{ height: 800, width: 800 }}\n            labelAttr=\"label\"\n            // onSelectNode={(node) => console.log(node)}\n            highlightDependencies\n          >\n      {nodes.map(n => {\n        console.log(n)\n        return ( <ForceGraphNode label = {n.title} node={{ id: n.id }} fill={n.color} className={n.class}/>)\n      })\n    }\n        {edges.map(e => {\n        return (<ForceGraphLink link={{ source: e.source, target: e.target }} stroke={e.color} className={e.class}/>) \n      })}\n\n      </InteractiveForceGraph>\n      </Container>\n    );\n  }\n\n}\n\nexport default Graph;\n"]},"metadata":{},"sourceType":"module"}