{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/burtenshaw/research/2020/11_november/potter_kg/app/src/Config.js\";\nvar config = JSON.parse(require('./config.json')); // const PotterConfig = config.map();\n\nvar NodeTypes = config.NodeTypes.map(_c = type => {\n  type.shape = /*#__PURE__*/_jsxDEV(\"symbol\", {\n    viewBox: \"0 0 100 100\",\n    id: typeText,\n    children: /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: \"50\",\n      cy: \"50\",\n      r: \"45\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 25\n    }, this)\n  }, \"0\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 20\n  }, this);\n  return type;\n});\n_c2 = NodeTypes;\nvar EdgeTypes = config.EdgeTypes.map(_c3 = type => {});\n_c4 = EdgeTypes;\nconst GraphConfig = {\n  NodeTypes: {\n    empty: {\n      // required to show empty nodes\n      typeText: \"None\",\n      shapeId: \"#empty\",\n      // relates to the type property of a node\n      shape: /*#__PURE__*/_jsxDEV(\"symbol\", {\n        viewBox: \"0 0 100 100\",\n        id: \"empty\",\n        children: /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"50\",\n          cy: \"50\",\n          r: \"45\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, \"0\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    },\n    custom: {\n      // required to show empty nodes\n      typeText: \"Custom\",\n      shapeId: \"#custom\",\n      // relates to the type property of a node\n      shape: /*#__PURE__*/_jsxDEV(\"symbol\", {\n        viewBox: \"0 0 50 25\",\n        id: \"custom\",\n        children: /*#__PURE__*/_jsxDEV(\"ellipse\", {\n          cx: \"50\",\n          cy: \"25\",\n          rx: \"50\",\n          ry: \"25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, \"0\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }\n  },\n  NodeSubtypes: {},\n  EdgeTypes: {\n    emptyEdge: {\n      // required to show empty edges\n      shapeId: \"#emptyEdge\",\n      shape: /*#__PURE__*/_jsxDEV(\"symbol\", {\n        viewBox: \"0 0 50 50\",\n        id: \"emptyEdge\",\n        children: /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"25\",\n          cy: \"25\",\n          r: \"8\",\n          fill: \"currentColor\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, \"0\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }\n  }\n};\nexport default PotterConfig;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"NodeTypes$config.NodeTypes.map\");\n$RefreshReg$(_c2, \"NodeTypes\");\n$RefreshReg$(_c3, \"EdgeTypes$config.EdgeTypes.map\");\n$RefreshReg$(_c4, \"EdgeTypes\");","map":{"version":3,"sources":["/home/burtenshaw/research/2020/11_november/potter_kg/app/src/Config.js"],"names":["config","JSON","parse","require","NodeTypes","map","type","shape","typeText","EdgeTypes","GraphConfig","empty","shapeId","custom","NodeSubtypes","emptyEdge","PotterConfig"],"mappings":";;AACA,IAAIA,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWC,OAAO,CAAC,eAAD,CAAlB,CAAb,C,CAEA;;AAGA,IAAIC,SAAS,GAAGJ,MAAM,CAACI,SAAP,CAAiBC,GAAjB,MAAsBC,IAAI,IAAI;AAC1CA,EAAAA,IAAI,CAACC,KAAL,gBAAe;AAAQ,IAAA,OAAO,EAAC,aAAhB;AAA8B,IAAA,EAAE,EAAEC,QAAlC;AAAA,2BACK;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAgB,MAAA,EAAE,EAAC,IAAnB;AAAwB,MAAA,CAAC,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA;AADL,KAAgD,GAAhD;AAAA;AAAA;AAAA;AAAA,UAAf;AAGA,SACIF,IADJ;AAGH,CAPe,CAAhB;MAAIF,S;AASJ,IAAIK,SAAS,GAAGT,MAAM,CAACS,SAAP,CAAiBJ,GAAjB,OAAsBC,IAAI,IAAI,CAE7C,CAFe,CAAhB;MAAIG,S;AAIJ,MAAMC,WAAW,GAAI;AACjBN,EAAAA,SAAS,EAAE;AACTO,IAAAA,KAAK,EAAE;AAAE;AACPH,MAAAA,QAAQ,EAAE,MADL;AAELI,MAAAA,OAAO,EAAE,QAFJ;AAEc;AACnBL,MAAAA,KAAK,eACH;AAAQ,QAAA,OAAO,EAAC,aAAhB;AAA8B,QAAA,EAAE,EAAC,OAAjC;AAAA,+BACE;AAAQ,UAAA,EAAE,EAAC,IAAX;AAAgB,UAAA,EAAE,EAAC,IAAnB;AAAwB,UAAA,CAAC,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF,SAA6C,GAA7C;AAAA;AAAA;AAAA;AAAA;AAJG,KADE;AAUTM,IAAAA,MAAM,EAAE;AAAE;AACRL,MAAAA,QAAQ,EAAE,QADJ;AAENI,MAAAA,OAAO,EAAE,SAFH;AAEc;AACpBL,MAAAA,KAAK,eACH;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,EAAE,EAAC,QAA/B;AAAA,+BACE;AAAS,UAAA,EAAE,EAAC,IAAZ;AAAiB,UAAA,EAAE,EAAC,IAApB;AAAyB,UAAA,EAAE,EAAC,IAA5B;AAAiC,UAAA,EAAE,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA;AADF,SAA4C,GAA5C;AAAA;AAAA;AAAA;AAAA;AAJI;AAVC,GADM;AAqBjBO,EAAAA,YAAY,EAAE,EArBG;AAsBjBL,EAAAA,SAAS,EAAE;AACTM,IAAAA,SAAS,EAAE;AAAG;AACZH,MAAAA,OAAO,EAAE,YADA;AAETL,MAAAA,KAAK,eACH;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,EAAE,EAAC,WAA/B;AAAA,+BACE;AAAQ,UAAA,EAAE,EAAC,IAAX;AAAgB,UAAA,EAAE,EAAC,IAAnB;AAAwB,UAAA,CAAC,EAAC,GAA1B;AAA8B,UAAA,IAAI,EAAC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAA+C,GAA/C;AAAA;AAAA;AAAA;AAAA;AAHO;AADF;AAtBM,CAArB;AAmCE,eAAeS,YAAf","sourcesContent":["\nvar config = JSON.parse(require('./config.json'));\n\n// const PotterConfig = config.map();\n\n\nvar NodeTypes = config.NodeTypes.map( type => {\n    type.shape =  (<symbol viewBox=\"0 0 100 100\" id={typeText} key=\"0\">\n                        <circle cx=\"50\" cy=\"50\" r=\"45\"></circle>\n                    </symbol>)\n    return (\n        type\n        )\n})\n\nvar EdgeTypes = config.EdgeTypes.map( type => {\n    \n})\n\nconst GraphConfig =  {\n    NodeTypes: {\n      empty: { // required to show empty nodes\n        typeText: \"None\",\n        shapeId: \"#empty\", // relates to the type property of a node\n        shape: (\n          <symbol viewBox=\"0 0 100 100\" id=\"empty\" key=\"0\">\n            <circle cx=\"50\" cy=\"50\" r=\"45\"></circle>\n          </symbol>\n        )\n      },\n      custom: { // required to show empty nodes\n        typeText: \"Custom\",\n        shapeId: \"#custom\", // relates to the type property of a node\n        shape: (\n          <symbol viewBox=\"0 0 50 25\" id=\"custom\" key=\"0\">\n            <ellipse cx=\"50\" cy=\"25\" rx=\"50\" ry=\"25\"></ellipse>\n          </symbol>\n        )\n      }\n    },\n    NodeSubtypes: {},\n    EdgeTypes: {\n      emptyEdge: {  // required to show empty edges\n        shapeId: \"#emptyEdge\",\n        shape: (\n          <symbol viewBox=\"0 0 50 50\" id=\"emptyEdge\" key=\"0\">\n            <circle cx=\"25\" cy=\"25\" r=\"8\" fill=\"currentColor\"> </circle>\n          </symbol>\n        )\n      }\n    }\n  }\n\n\n  export default PotterConfig;\n"]},"metadata":{},"sourceType":"module"}